datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id             String  @id @default(uuid())
  username       String  @unique
  imageUrl       String  @db.Text
  externalUserId String  @unique
  bio            String? @db.Text

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  follower  Follow[] @relation("Follower")
  followee  Follow[] @relation("Followee")
  Follow    Follow[]
  blocker   Block[]  @relation("Blocker")
  blocked   Block[]  @relation("Blocked")
  Block     Block[]
}

model Follow {
  id         String @id @default(uuid())
  followerId String
  follower   User   @relation("Follower", fields: [followerId], references: [id], onDelete: Cascade)

  followeeId String
  followee   User   @relation("Followee", fields: [followeeId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?

  @@unique([followerId, followeeId])
  @@index([followeeId], name: "followee_id")
  @@index([followerId], name: "follower_id")
}

model Block {
  id        String @id @default(uuid())
  blockerId String
  blockedId String

  blocker User @relation("Blocker", fields: [blockerId], references: [id], onDelete: Cascade)
  blocked User @relation("Blocked", fields: [blockedId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    String?

  @@unique([blockerId, blockedId])
  @@index([blockerId])
  @@index([blockedId])
}
